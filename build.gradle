buildscript {
    ext {
        springBootVersion = '1.2.1.BUILD-SNAPSHOT'
        springCloudVersion = '1.0.0.RC3'
        springCloudNetflixVersion = '1.0.0.RC2'
        springHateoasVersion = '0.16.0.RELEASE'
        springPluginVersion = '1.1.0.RELEASE'
        springSecurityOAuthVersion = '2.0.6.RELEASE'
        jacksonDataTypeVersion = '2.4.4'
        oracleVersion = '1.0.0'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()
        maven { url "http://repo.spring.io/plugins-snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.3.1.BUILD-SNAPSHOT"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse-wtp'
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://m2.neo4j.org/content/repositories/releases" }
    }
    
    eclipse {    	
    	classpath {
    		downloadSources = true
    		downloadJavadoc = true
    	}
    }

//    dependencyManagement {
//        dependencies {
//            dependencySet(group:"org.springframework.boot", version: "1.2.1.BUILD-SNAPSHOT") {
//                entry "spring-boot-starter-actuator"
//                entry "spring-boot-actuator"
//                entry "spring-boot-starter"
//                entry "spring-boot-starter-web"
//                entry "spring-boot-starter-actuator"
//                entry "spring-boot"
//                entry "spring-boot-autoconfigure"
//            }
//        }
//    }
}

subprojects {
    apply plugin: 'spring-boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:1.1.0.RELEASE")
        compile("org.springframework.cloud:spring-cloud-spring-service-connector:1.1.0.RELEASE")
        compile("org.springframework.cloud:spring-cloud-starter-hystrix:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-eureka:${springCloudVersion}")

        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

project(':config-server') {
    jar {
        baseName = 'config-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-config-server:${springCloudVersion}")
    }
}

project(':oauth-server') {
    jar {
        baseName = 'oauth-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.security.oauth:spring-security-oauth2:${springSecurityOAuthVersion}")
        compile("org.springframework.boot:spring-boot-starter-freemarker")
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("com.h2database:h2")        
    }
}

project(':eureka-server') {
    jar {
        baseName = 'eureka-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server:${springCloudVersion}")      
    }

//    configurations.all {
//        exclude group: "org.slf4j", module: "log4j-over-slf4j"
//        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
//    }

    springBoot {
        requiresUnpack = ['com.netflix.eureka:eureka-core', 'com.netflix.eureka:eureka-client']
    }
}

project(':hystrix-server') {
    jar {
        baseName = 'hystrix-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:${springCloudVersion}")
    }
}

project(':turbine-server') {
    jar {
        baseName = 'turbine-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
//        compile("org.springframework.cloud:spring-cloud-starter-turbine-amqp:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-turbine:${springCloudVersion}")
    }
}

project(':peoplesoft-server') {
    jar {
        baseName = 'peoplesoft-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
//        compile("org.springframework.cloud:spring-cloud-netflix-hystrix-amqp:${springCloudNetflixVersion}")        
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:${jacksonDataTypeVersion}")
        compile("com.zaxxer:HikariCP")
        compile("com.h2database:h2")
        compile("com.oracle:ojdbc6:${oracleVersion}")        
        compile("joda-time:joda-time")       
        compile("org.jadira.usertype:usertype.core:3.2.0.GA")
        compile("org.springframework.hateoas:spring-hateoas:${springHateoasVersion}")
        compile("org.springframework.plugin:spring-plugin-core:${springPluginVersion}")         
    }
}

project(':gateway-server') {
    jar {
        baseName = 'gateway-server'
        version = '0.0.1-SNAPSHOT'
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${springCloudVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zuul:${springCloudVersion}")
//        compile("org.springframework.cloud:spring-cloud-netflix-hystrix-amqp:${springCloudVersion}")
    }		
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
